 program test_cufft
    use, intrinsic :: iso_c_binding 
    use cuda_graph
    ! use filter
    use cufft_m
    use cudafor
    use cpu_timer
    use dimen
    use precision
    use filter_graph
    ! use filter_cpu
    implicit none

    real(fp),dimension(nx,ny,nz2,3) :: u_host,dudx_host,dudy_host
    real(fp),dimension(nx,ny,nz2,3),device :: u,dudx,dudy
    complex(fp), dimension(nx,ny,nz2,3),device :: u_hat,dudx_hat,dudy_hat

    complex(fp), dimension(nx,ny,nz2,3) :: u_hat_test
    real(fp),dimension(nx,ny,nz2) :: u_filtered,dudx_filtered,dudy_filtered
    integer,parameter :: nt = 1000
    integer istat,i,j,k,t
    type(c_ptr) plan_batch(2)
    REAL(fp), POINTER, DIMENSION(:) :: null_ptr => NULL ()

    type (cudaEvent) :: startEvent, stopEvent,startEvent1, stopEvent1
    real :: time,time1,time_cpu,max_error
    real(fp) :: wctime1,wctime2
    ! include 'dimen.h'

    call random_number(u_host)
    u = u_host

    !---------------------------------------------------------------------------
    ! GPU code
    !---------------------------------------------------------------------------

    call get_batchfft_plan(plan_batch,3)
    ! Create cuda runtime event

istat = cudaEventCreate(startEvent1)
istat = cudaEventCreate(stopEvent1)

istat = cudaEventRecord(startEvent1, 0)
    do t = 1,Nt
        call ddxy_filter_graph(u,dudx,dudy,plan_batch)
    end do

istat = cudaEventRecord(stopEvent1, 0)
istat = cudaEventSynchronize(stopEvent1)
istat = cudaEventElapsedTime(time1, startEvent1, stopEvent1)

istat = cudaEventDestroy(startEvent1)
istat = cudaEventDestroy(stopEvent1)

WRITE (*,*) 'GPU time: ', time1/nt, ' ms'


istat = cudaEventDestroy(startEvent1)
istat = cudaEventDestroy(stopEvent1)


    call cufftDestroy(plan_batch(1))
    call cufftDestroy(plan_batch(2))   

    u_filtered = u(:,:,:,1) 
    dudx_filtered = dudx(:,:,:,1)
    u_hat_test = u_hat
    print *,u_filtered(10,10,10)
    ! !---------------------------------------------------------------------------
    ! ! cpu code
    ! !---------------------------------------------------------------------------
    ! call ddxy_filter_cpu(u_host(:,:,:,1),dudx_host(:,:,:,1),dudy_host(:,:,:,1),0)
    ! call get_walltime(wctime1)
    ! ! CALL CPU_TIME ( time_begin ) 
    ! do t = 1,Nt
    !     call ddxy_filter_cpu(u_host(:,:,:,1),dudx_host(:,:,:,1),dudy_host(:,:,:,1),1)
    !     call ddxy_filter_cpu(u_host(:,:,:,2),dudx_host(:,:,:,2),dudy_host(:,:,:,2),1)
    !     call ddxy_filter_cpu(u_host(:,:,:,3),dudx_host(:,:,:,3),dudy_host(:,:,:,3),1)
    ! end do
    ! call get_walltime(wctime2)

    ! max_error = maxval(abs(dudx_host(:,:,2:nzb+1,1)-dudx_filtered(:,:,2:nzb+1)))
    ! print *,'Max error',max_error
    
    ! time_cpu = (wctime2 - wctime1)
    ! WRITE (*,*) 'GPU Speedup: ', time_cpu/time*1000 
   
end program test_cufft

